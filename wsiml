#!/usr/bin/bash
# Copyright (c) 2024 Quantius Benignus
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

TEMPD='/dev/shm'
ramf="$TEMPD/wfile"
NTHR=8
CLIPBOARD=false
#lang="auto"
#lang="en"
lang="ru"
#lang="uk"

#model=${WHISPER_DMODEL:-"/home/data/projects/whisper.cpp/models/ggml-medium.bin"}
#model=${WHISPER_DMODEL:-"/home/data/projects/whisper.cpp/models/ggml-small-q5_1.bin"}
model=${WHISPER_DMODEL:-"/home/data/projects/whisper.cpp/models/ggml-large-v3-turbo-q5_0.bin"}

while [ $# -gt 0 ]; do
    case "$1" in
        -c|--clipboard)
            CLIPBOARD=true
            shift
            ;;
        -l|--language)
            shift
            lang=$1
            shift
            ;;
        -h|--help)
            echo "Usage: $0 [-c|--clipboard]"
            echo "  -c, --clipboard: Use clipboard instead of PRIMARY selection"
            echo "  -l, --language: Choose an input language (different than the default)"
            echo "  -n, --netapi: Use whisper.cpp server with the host:port in the GONFIG block"
            echo "  -t, --translate: Translate to english (default is no translation)"
            echo "Any other command line flag is expected to come after and be a valid whisper.cpp flag/argument and will be passed to it as is."
            echo "For example: 'wsiml -l pl -t --best-of 7' is a valid call to wsiml"
            exit 0
            ;;
        *)
            #Anything else is passed along to whisper.cpp, so use the above flags first and know what you are doing:
            break
            ;;
    esac
done

rem_args=("$@")

# run spinner
python3 "/home/data/projects/blahst/spinner.py" &
APP_PID=$!

echo "Recording now: "$(date +%s.%N)
rec -q -t wav $ramf rate 16k silence 1 0.1 1% 1 2.0 5%  2>/dev/null

function dbus-send() {
  gdbus call --session \
      --dest dev.mervick.blahstSpinner \
      --object-path /dev/mervick/blahstSpinner \
      --method dev.mervick.blahstSpinner.SendMessage "$1"
}

dbus-send "transcribe"
echo "Sending now: "$(date +%s.%N)

start_time=$SECONDS
#str="$(transcribe -t 16 -nt -m $model -f $ramf -l $lang ${rem_args[@]} --no-prints 2>/dev/null)"
#str="$(transcribe -t $NTHR -nt -m $model -f $ramf -l $lang --no-prints ${rem_args[@]} 2>/dev/null)"
str="$(transcribe -t $NTHR -nt -m $model -f $ramf -l $lang --no-prints ${rem_args[@]} )"
[[ $? != 0 ]] && kill $APP_PID && exit 123

#echo "$TRANSLATING from $lang"
#echo "Got text now: "$(date +%s.%N)
#echo "$str"

# Whisper detected non-speech events such as (wind blowing):
str="${str/\(*\)}"
str="${str/\[*\]}"
str="${str#$'\n'}"
str="${str#$'\n'}"

if [ "$CLIPBOARD" = true ]; then
  echo "$str" | xsel -ib
else
  elapsed_time=$((SECONDS - start_time))

  current_clipboard="$(xsel --clipboard --output)"
  sleep 0.1
#  echo "$str ($elapsed_time sec)" | awk '{$1=$1};1' | xsel -ib
  echo "$str" | awk '{$1=$1};1' | xsel -ib
  sleep 0.1
  xdotool key --clearmodifiers ctrl+v
  #  echo "$str" | awk '{$1=$1};1' | xsel --clipboard --input
  #  xdotool key --clearmodifiers ctrl+v
  sleep 0.1
  echo "$current_clipboard" | xsel -ib
fi

dbus-send "close"
kill $APP_PID
